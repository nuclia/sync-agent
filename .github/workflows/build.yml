name: build
on:
  push:
    branches:
      - main
  
jobs:
  build_job:
    runs-on: ${{ matrix.os }} 

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: justincy/github-action-npm-release@2.0.2
      id: release
    - uses: actions/setup-python@v5
      if: matrix.os == 'macos-latest'
      with:
        python-version: '3.11'
    - uses: actions/setup-node@master
      with:
        node-version: 20
    - name: install dependencies electron-app
      run: npm install
      working-directory: electron-app

    - name: install dependencies server
      run: npm install
      working-directory: server

    - name: lint/format electron-app
      env:
        CI: false
      run: npm run ci:format
      working-directory: electron-app

    - name: lint/format server
      env:
        CI: false
      run: npm run ci:format
      working-directory: server

    - name: test
      env:
        CI: false
      run: npm run test
      working-directory: server

    - name: compile server
      env:
        CI: false
      run: npm run compile
      working-directory: server
    - name: Add MacOS certs
      if: matrix.os == 'macos-latest'
      run: chmod +x add-osx-cert.sh && ./add-osx-cert.sh
      working-directory: electron-app
      env:
        CERTIFICATE_OSX_APPLICATION_BASE64: ${{ secrets.CERTIFICATE_OSX_APPLICATION_BASE64 }}
        CERTIFICATE_OSX_PASSWORD: ${{ secrets.CERTIFICATE_OSX_PASSWORD }}
    - name: Prepare for app notarization
      if: matrix.os == 'macos-latest'
      run: |-
        mkdir -p ~/private_keys/
        echo '${{ secrets.APPLE_API_SECRET_BASE_64 }}' | base64 --decode > ~/private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8
    - name: build and publish
      if: steps.release.outputs.released == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        APPLE_API_KEY: "~/private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8"
        APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
        APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
        CI: false
      run: npm run publish

    - name: build
      if: steps.release.outputs.released != 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        APPLE_API_KEY: "~/private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8"
        APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
        APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
        CI: false
      run: npm run make